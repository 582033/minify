#summary About the new code in SVN.
#labels Phase-Design

= Coming Soon =

If you check the [http://code.google.com/p/minify/source/browse/trunk trunk], you'll see a completely new Minify in the works. 

This version is built upon a library of classes allowing users to easily build customized minified-file servers; or add minification, HTTP encoding, or [http://fishbowl.pastiche.org/2002/10/21/http_conditional_get_for_rss_hackers conditional GET] to existing projects. It will release with a v1-compatible minify.php script to ease upgrades, but also complete example sites to show its flexibility.

I encourage you to [http://code.google.com/p/minify/source/checkout checkout] the new version, run the tests, and see the code for Example 1 ([http://code.google.com/p/minify/source/browse/trunk/web/examples/1/m.php m.php] and [http://code.google.com/p/minify/source/browse/trunk/web/examples/1/index.php index.php]) to get an idea of usage (in the current state). 

The individual files have docs, but proper documentation will come in time. The [http://code.google.com/p/minify/source/browse/trunk/README README] has a bit more info.

If you like, there is an [http://subtlety.errtheblog.com/O_o/2eb.xml RSS commit feed].

=== HTTP Classes ===

The two HTTP utility classes, [http://code.google.com/p/minify/source/browse/trunk/lib/HTTP/ConditionalGet.php HTTP_ConditionalGet] and [http://code.google.com/p/minify/source/browse/trunk/lib/HTTP/Encoder.php HTTP_Encoder], are already fairly well-tested and include a set of test pages to see how they work. On the [http://fawn.ifas.ufl.edu/ Florida Automated Weather Network] site, these are used especially in scripts that serve data to our Flash components.

Here's an example of using both to conditionally serve a text file gzipped:
{{{
$cg = new HTTP_ConditionalGet(array(
    'lastModifiedTime' => filemtime($filepath)
    ,'isPublic' => true
));
$cg->sendHeaders();
if ($cg->cacheIsValid) {
    // client cache was valid, no content needed
    exit();
}
require 'HTTP/Encoder.php';
$he = new HTTP_Encoder(array(
    'content' => file_get_contents($filepath)
    ,'type' => 'text/plain'
));
$he->encode();
$he->sendAll();
}}}