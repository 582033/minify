#summary Frequently asked questions.
#labels Featured

= How fast is Minify? =

Pretty damn fast. I haven't done extensive benchmarking yet, but in unscientific tests on a moderately powerful server, Minify was capable of serving 950 requests per second with caching enabled and 590 requests per second with caching disabled when serving CSS. That's fast enough for you, old man.

!JavaScript minification is about as fast CSS with caching enabled, but closer to 70 requests per second with caching disabled.

= Does Minify support gzip compression? =

Minify doesn't perform gzip compression itself, but it works great when used with Apache's mod_deflate or mod_gzip modules. It should also work fine with the compression features of other web servers.

I made a conscious decision not to implement custom gzip support in Minify since most web servers already provide better, faster implementations than I would be able to write. This way the server does what it does best and Minify does what it does best.

= Does Minify work with PHP opcode caches like APC and eAccelerator? =

Yep!

= Why can't Minify combine both CSS files and JavaScript files in the same request? =

Because that would be silly. A web browser would never be able to parse a mixture of both CSS and !JavaScript, so Minify doesn't allow you to mix them together.

If you want to use Minify to insert CSS and !JavaScript into inline HTML blocks, you can do that easily by calling Minify from within PHP and creating two separate instances of the `Minify` class. There's an example of this in the [UserGuide User Guide].

= How does Minify ensure that the client can't request files it shouldn't have access to? =

When Minify processes a request, it looks at the paths of all the files being requested and resolves them into full absolute paths. It then checks to make sure each path is under the server's document root.

If _any_ of the requested files are outside the document root, have extensions other than `.css` or `.js`, or are unreadable by the PHP process, the entire request is refused.

= Does this mean Minify is foolproof security-wise? =

Not quite. For example, if for some reason you have a `.css` or `.js` file under your document root that is being protected by `.htaccess` restrictions or something similar, Minify has no way of knowing this and will still serve those files if they're readable by the PHP process.

This situation is unlikely, but you should be aware that Minify has no way of knowing about file restrictions that are managed outside of the file system itself. If you need to ensure that users don't have access to a `.css` or `.js` file under your document root, make sure that file isn't readable by the PHP process.

= Is Minify used in production by any large-scale websites? =

Currently I'm not aware of any large-scale websites running Minify, but the project is still very young so not many people have heard of it yet. If you know of such a site, please [mailto:ryan@wonko.com contact me].

= Can I use Minify with my commercial website or product? =

Sure. Minify is distributed under the [http://www.opensource.org/licenses/bsd-license.php New BSD License], which means that you're free to use, modify, and redistribute Minify or derivative works thereof, even for commercial purposes, as long as you comply with a few simple requirements. See the [http://minify.googlecode.com/svn/trunk/LICENSE LICENSE] file for details.