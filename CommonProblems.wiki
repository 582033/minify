#summary Common Problems using Minify
#labels Featured,Phase-Support

== Dealing with Javascript errors ==

Minify currently uses JSMin to remove whitespace from Javascript. Although [http://code.google.com/p/minify/source/browse/trunk/min/lib/JSMin.php Minify's JSMin] has been patched beyond Douglas Crockford's [http://www.crockford.com/javascript/jsmin.html original], errors can still be introduced, e.g. in scripts that rely on [http://www.robertnyman.com/2008/10/16/beware-of-javascript-semicolon-insertion/ semicolon insertion] or other unusual syntax. To avoid problems, in general:

  * When available, use pre-compressed versions of Javascript libraries (generally JSMin will not break code output by the more advanced Rhino-based compressors like [http://developer.yahoo.com/yui/compressor/ YUI Compressor]), or use a [http://code.google.com/apis/ajaxlibs/ Google-hosted version] and reserve Minify for serving plugins and user code.
  * Try [http://code.google.com/p/minify/source/browse/trunk/min/README.txt?r=292#120 debug mode] to check your files for errors. Debug mode _can_ introduce its own errors, but is generally reliable. The comment at the beginning of the line of the error will tell you the line number in the original source file.
  * In a custom group, you can specify a file to have [http://code.google.com/p/minify/wiki/UserGuide#Custom_functions_for_files no minifier] (HTTP compression will still be used).
  * If you have Java on your web host, you can use the [http://code.google.com/p/minify/source/browse/trunk/min/lib/Minify/YUICompressor.php wrapper for YUI Compressor] instead of JSMin. Ask the mailing list for instructions.

=== Scriptaculous ===

Scriptaculous 1.8.2 (and probably all 1.x) has an [http://github.com/madrobby/scriptaculous/blob/4b49fd8884920d4ee760b0194431f4f433f878df/src/scriptaculous.js#L54 autoloader] that requires a particular HTML and file layout. To serve its files with Minify, just leave out `scriptaculous.js` (it's just for loading). Serve `prototype.js` and the individual support files (e.g. `dragdrop.js`, `effects.js`) and the library should work fine. E.g.:

{{{
<script src="/min/f=scriptaculous/lib/prototype.js" type="text/javascript"></script>
<script src="/min/b=scriptaculous/src&amp;f=effects.js,dragdrop.js" type="text/javascript"></script>
}}}

== Character Encodings ==

_Please_ use UTF-8. The string processing may work on encodings like Windows-1251 but will certainly fail on radically different ones like UTF-16.

If you consistently use a different encoding, in `config.php` set `$min_serveOptions['contentTypeCharset']` to this encoding to send it in the Content-Type header.

Otherwise, set it to `false` to remove it altogether. You can still, in CSS, use the [http://www.w3.org/TR/CSS2/syndata.html#x50 @charset] directive to tell the browser the encoding, but (a) it must appear first and (b) shouldn't appear later in the output (and Minify won't enforce this).

Moral? Use UTF-8.

== @imports can appear in invalid locations in combined CSS files ==

If you combine CSS files, @import declarations can appear after CSS rules, invalidating the stylesheet. As of version 2.1.2, if Minify detects this, it will prepend a warning to the output CSS file. To resolve this, you can either move your @import statements within your files, or enable the option 'bubbleCssImports'.

== URIs are re-written incorrectly in CSS output ==

  * As these settings are complex, *please troubleshoot problems on the [http://groups.google.com/group/minify minify mailing list] before filing an issue.* Please include the following when posting or creating an issue: 
    # complete file path of the DOCUMENT_ROOT
    # complete file path of the CSS source file
    # the `$min_symlink` setting (if used)
    # the original and output URIs
  * Check that DOCUMENT_ROOT is a real directory path. If `$_SERVER['DOCUMENT_ROOT']` is invalid, e.g. contains a trailing slash "/", or points to a path that doesn't exist, URI rewriting may fail. If you cannot fix this in httpd.conf, etc., use the [http://code.google.com/p/minify/source/browse/trunk/min/config.php?r=292#47 configuration option].
  * If your CSS source file is in a symlink-ed directory (e.g. not within DOCUMENT_ROOT), you will have to use the [http://code.google.com/p/minify/source/browse/trunk/min/config.php?r=292#114 $min_symlinks] option.
  * If you have 2.1.2, updating [http://code.google.com/p/minify/source/detail?r=309 these modified files] will add URI-rewriting process info to debug mode.

== Debug mode can cause a Javascript error ==

This issue was resolved in version 2.1.2.

Debug mode adds line numbers in comments. Unfortunately, in versions <= 2.1.1, if the source file had a string or regex containing (what looks like) a C-style comment token, the algorithm was confused and the injected comments caused a syntax error.

== Minification can cause a Javascript error ==

This issue was resolved in version 2.1.2.

In rare instances the [http://code.google.com/p/minify/source/browse/tags/release_2.1.1/min/lib/JSMin.php#14 JSMin] algorithm in versions <= 2.1.1 could be confused by regexes in certain contexts and throw an exception. The workaround was to simply wrap the expression in parenthesis. E.g.
{{{
// in 2.1.1 and previous
return /'/;   // JSMin throws error
return (/'/); // no error
}}}