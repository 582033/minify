#summary Common Problems using Minify
#labels Featured,Phase-Support

If this page doesn't help, please post a question on our [http://groups.google.com/group/minify Google group].

== URIs are re-written incorrectly in CSS output ==

See UriRewriting.

== Files aren't cached in IE6 ==

*Use Minify 2.1.4+*.

For Minify 2.1.3 and below:

  # Open `/min/lib/HTTP/Encoder.php`
  # On line [http://code.google.com/p/minify/source/browse/tags/release_2.1.3/min/lib/HTTP/Encoder.php#62 62], change `false` to `true`.

== Builder Fails / 400 Errors ==

*Use Minify 2.1.4+*, and you can see the cause of 400 responses using FirePHP (See [Debugging]).

== Dealing with Javascript errors ==

Short answer: *use Minify 2.1.4+, use a pre-compressed version of your file, and rename it `*.min.js` or `*-min.js`*. By default Minify won't try to minify these files (but will still gzip them). The [http://compressorrater.thruhere.net/ Compressor Rater] is handy for compressing files individually.

If the error is in your code, enable [Debugging debug mode] while debugging your code in Firebug or your favorite browser's Javascript debugger. This will insert comments to allow you to keep track of the individual source locations in the combined file.

If you have Java on your web host, you can use the [http://code.google.com/p/minify/source/browse/trunk/min/lib/Minify/YUICompressor.php wrapper for YUI Compressor] instead of JSMin. [http://groups.google.com/group/minify/browse_thread/thread/f12f25f27e1256fe This thread] shows how a user has done this.

== Javascript isn't being minified ==

There are cases where Minify would leave your file unmodified:
  * the filename ends with *`-min.js`* or *`.min.js`*
  * the script contains syntax like `+ ++a`. Minify's JSMin port can't handle this syntax and assumes it's a script already minified by Closure Compiler.

=== Scriptaculous ===

Scriptaculous 1.8.2 (and probably all 1.x) has an [http://github.com/madrobby/scriptaculous/blob/4b49fd8884920d4ee760b0194431f4f433f878df/src/scriptaculous.js#L54 autoloader script] that requires files to be in a particular place on disk. To serve Scriptaculous modules with Minify, just serve `prototype.js` and the individual support files (e.g. `dragdrop.js`, `effects.js`) and the library should work fine. E.g.:

{{{
<script src="/min/f=scriptaculous/lib/prototype.js" type="text/javascript"></script>
<script src="/min/b=scriptaculous/src&amp;f=effects.js,dragdrop.js" type="text/javascript"></script>
<script type="text/javascript">
/* DragDrop and Effects modules can be used here. */
</script>
}}}

== Cache files won't update ==

If you upload files using [http://groups.google.com/group/coda-users/browse_thread/thread/572d2dc315ec02e7/ Coda or Transmit] or from a Windows PC to a non-Windows server, your new files may end up with the wrong timestamp on the server, confusing the cache system.

Setting the [http://code.google.com/p/minify/source/browse/tags/release_2.1.3/min/config.php#129 $min_uploaderHoursBehind option] in `config.php` can compensate for this.

WinSCP has a [http://winscp.net/eng/docs/ui_login_environment#daylight_saving_time Daylight Saving Time option] that can prevent this issue. 

== Can't see changes in browser ==

Generally changes aren't seen because a) the browser is refusing to send a new request, or b) the server doesn't recognize that your source files have been modified after the server cache was created.

First, place the Minify URL directly in the address bar and refresh.

If a change is not seen, verify that the server cache file is being updated. If it's not, it could be the problem in the section above, or it could be that the `mtime` of your modified source file is not being updated (some tools do not always update it). Trying `touch`-ing the file.

== Disable Caching ==

If you'd like to temporarily disable the cache without using [Debugging debug mode], place these settings at the end of `config.php`:
{{{
// disable server caching
$min_cachePath = null;
// prevent client caching
$min_serveOptions['maxAge'] = 0;
$min_serveOptions['lastModifiedTime'] = $_SERVER['REQUEST_TIME'];
}}}
*Don't do this on a production server!* Minify will have to combine, minify, and gzencode on every request.

== Character Encodings ==

_Please_ use UTF-8. The string processing may work on encodings like Windows-1251 but will certainly fail on radically different ones like UTF-16.

If you consistently use a different encoding, in `config.php` set `$min_serveOptions['contentTypeCharset']` to this encoding to send it in the Content-Type header.

Otherwise, set it to `false` to remove it altogether. You can still, in CSS, use the [http://www.w3.org/TR/CSS2/syndata.html#x50 @charset] directive to tell the browser the encoding, but (a) it must appear first and (b) shouldn't appear later in the output (and Minify won't enforce this).

Moral? To minimize problems, use UTF-8 and remove any `@charset` directives from your CSS.

== @imports can appear in invalid locations in combined CSS files ==

If you combine CSS files, @import declarations can appear after CSS rules, invalidating the stylesheet. As of version 2.1.2, if Minify detects this, it will prepend a warning to the output CSS file. To resolve this, you can either move your @import statements within your files, or enable the option 'bubbleCssImports'.

== Debug mode can cause a Javascript error ==

This issue was resolved in version 2.1.2.

Debug mode adds line numbers in comments. Unfortunately, in versions <= 2.1.1, if the source file had a string or regex containing (what looks like) a C-style comment token, the algorithm was confused and the injected comments caused a syntax error.

== Minification can cause a Javascript error ==

This issue was resolved in version 2.1.2.

In rare instances the [http://code.google.com/p/minify/source/browse/tags/release_2.1.1/min/lib/JSMin.php#14 JSMin] algorithm in versions <= 2.1.1 could be confused by regexes in certain contexts and throw an exception. The workaround was to simply wrap the expression in parenthesis. E.g.
{{{
// in 2.1.1 and previous
return /'/;   // JSMin throws error
return (/'/); // no error
}}}

== Can't specify more than 10 files via URL ==

Use Minify 2.1.4+. Before there was a setting to adjust the maximum allowed.

== See Also ==

 * [Debugging]